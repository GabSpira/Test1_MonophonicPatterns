/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/startup.js":
/*!***************************!*\
  !*** ./public/startup.js ***!
  \***************************/
/***/ (() => {

eval("/*************************************************************************\n         (C) Copyright AudioLabs 2017\n\nThis source code is protected by copyright law and international treaties. This source code is made available to You subject to the terms and conditions of the Software License for the webMUSHRA.js Software. Said terms and conditions have been made available to You prior to Your download of this source code. By downloading this source code You agree to be bound by the above mentionend terms and conditions, which can also be found here: https://www.audiolabs-erlangen.de/resources/webMUSHRA. Any unauthorised use of this source code may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under law.\n\n**************************************************************************/\n\n\n\n\n// import firebase from 'firebase/app';\n// import { getFirestore , collection, getDocs, doc, setDoc} from 'firebase/firestore';\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyD7y9iBRvyxim9_9l8m5LQRexBdB63cmHo\",\n//   authDomain: \"maelisteningtest.firebaseapp.com\",\n//   projectId: \"maelisteningtest\",\n//   storageBucket: \"maelisteningtest.appspot.com\",\n//   messagingSenderId: \"953894482343\",\n//   appId: \"1:953894482343:web:a505e13240e8ea5dac0682\",\n//   measurementId: \"G-F2RS4PDMKP\"\n// };\n\n// // Inizializza l'app Firebase\n// firebase.initializeApp(firebaseConfig);\n\n// // Ottieni istanza di Firestore\n// const db = getFirestore();\n\n// const firestore = getFirestore();\n\n\n// const colRef = collection(db, 'results');\n\n\n// getDocs(colRef)\n//   .then((snapshot) => {\n//     console.log(snapshot.docs)\n//   });\n\n\n// var resultsRef = firebase.firestore().collection(\"results\");\n\n// function usersData() {\n//   resultsRef.add({\n//     age: age,\n//     years: years\n//   })\n//   .then(function(docRef) {\n//     console.log(\"Dati dell'utente scritti con successo. ID del documento:\", docRef.id);\n//   })\n//   .catch(function(error) {\n//     console.error(\"Errore nella scrittura dei dati dell'utente:\", error);\n//   });\n// }\n\n\n\n\n\n// //\n// document.getElementById('index.html').addEventListener('submit', function(e) {\n//   e.preventDefault(); // Evita il comportamento predefinito dell'invio del modulo\n\n//   // Recupera i dati dal modulo\n//   var name = document.getElementById('name').value;\n//   var email = document.getElementById('email').value;\n//   // Recupera gli altri dati necessari\n\n//   // Crea un oggetto con i dati da inviare a Firestore\n//   var data = {\n//     name: name,\n//     email: email,\n//     // Aggiungi gli altri dati al tuo oggetto 'data'\n//   };\n\n//   // Invia i dati a Firestore utilizzando la libreria Firebase\n//   firebase.firestore().collection('results').add(data)\n//     .then(function() {\n//       // Dati inviati con successo\n//       alert('Dati inviati con successo a Firestore!');\n//       // Puoi anche reindirizzare l'utente a una pagina di conferma o fare altre operazioni qui\n//     })\n//     .catch(function(error) {\n//       // Gestione degli errori in caso di problemi nell'invio dei dati\n//       console.error('Errore nell\\'invio dei dati a Firestore:', error);\n//     });\n// });\n\n\n\n\n\n\n\n\nfunction checkOrientation() {//when changing from potrait to landscape change to the rigth width\n\n  var siteWidth = document.body.scrollWidth;\n  $(\"#header\").css(\"width\", siteWidth.toString());\n\n}\n\nwindow.onresize = function(event) {\n  if (pageManager.getCurrentPage() && pageManager.getCurrentPage().isMushra == true) {\n    pageManager.getCurrentPage().renderCanvas(\"mushra_items\");\n  }\n\n  checkOrientation();\n};\n\n// $(document).ready(function(){\n// $(window).scroll(function(){\n// $('#header').css({\n// 'left': $(this).scrollLeft()//Note commented because it causes the endless scrolling to the left\n// });\n// });\n// });\n\n\n// callbacks\nfunction callbackFilesLoaded() {\n  pageManager.start();\n  pageTemplateRenderer.renderProgressBar((\"page_progressbar\"));\n  pageTemplateRenderer.renderHeader((\"page_header\"));\n  pageTemplateRenderer.renderNavigation((\"page_navigation\"));\n\n  if (config.stopOnErrors == false || !errorHandler.errorOccurred()) {\n    $.mobile.loading(\"hide\");\n    $(\"body\").children().children().removeClass('ui-disabled');\n  } else {\n    var errors = errorHandler.getErrors();\n    var ul = $(\"<ul style='text-align:left;'></ul>\");\n    $('#popupErrorsContent').append(ul);\n    for (var i = 0; i < errors.length; ++i) {\n      ul.append($('<li>' + errors[i] + '</li>'));\n    }\n    $(\"#popupErrors\").popup(\"open\");\n    $.mobile.loading(\"hide\");\n  }\n\n  if ($.mobile.activePage) {\n    $.mobile.activePage.trigger('create');\n  }\n}\n\nfunction callbackURLFound() {\n  var errors = errorHandler.getErrors();\n  var ul = $(\"<ul style='text-align:left;'></ul>\");\n  $('#popupErrorsContent').append(ul);\n  for (var i = 0; i < errors.length; ++i) {\n    ul.append($('<li>' + errors[i] + '</li>'));\n  }\n  $(\"#popupErrors\").popup(\"open\");\n}\n\nfunction addPagesToPageManager(_pageManager, _pages) {\n  for (var i = 0; i < _pages.length; ++i) {\n    if (Array.isArray(_pages[i])) {\n      if (_pages[i][0] === \"random\") {\n        _pages[i].shift();\n        shuffle(_pages[i]);\n      }\n      addPagesToPageManager(_pageManager, _pages[i]);\n    } else {\n      var pageConfig = _pages[i];\n      if (pageConfig.type == \"generic\") {\n        _pageManager.addPage(new GenericPage(_pageManager, pageConfig));\n      } else if (pageConfig.type == \"volume\") {\n        var volumePage = new VolumePage(_pageManager, audioContext, audioFileLoader, pageConfig, config.bufferSize, errorHandler, config.language);\n        _pageManager.addPage(volumePage);\n      } else if (pageConfig.type == \"mushra\") {\n        var mushraPage = new MushraPage(_pageManager, audioContext, config.bufferSize, audioFileLoader, session, pageConfig, mushraValidator, errorHandler, config.language);\n        _pageManager.addPage(mushraPage);\n      } else if ( pageConfig.type == \"spatial\"){\n        _pageManager.addPage(new SpatialPage(_pageManager, pageConfig, session, audioContext, config.bufferSize, audioFileLoader, errorHandler, config.language));\n      } else if (pageConfig.type == \"paired_comparison\") {\n        var pcPageManager = new PairedComparisonPageManager();\n        pcPageManager.createPages(_pageManager, pageTemplateRenderer, pageConfig, audioContext, config.bufferSize, audioFileLoader, session, errorHandler, config.language);\n        pcPageManager = null;\n      } else if (pageConfig.type == \"bs1116\") {\n        var bs1116PageManager = new BS1116PageManager();\n        bs1116PageManager.createPages(_pageManager, pageTemplateRenderer, pageConfig, audioContext, config.bufferSize, audioFileLoader, session, errorHandler, config.language);\n        bs1116PageManager = null;\n      } else if (pageConfig.type == \"likert_single_stimulus\") {\n        var likertSingleStimulusPageManager = new LikertSingleStimulusPageManager();\n        likertSingleStimulusPageManager.createPages(_pageManager, pageTemplateRenderer, pageConfig, audioContext, config.bufferSize, audioFileLoader, session, errorHandler, config.language);\n        likertSingleStimulusPageManager = null;\n      } else if (pageConfig.type == \"likert_multi_stimulus\") {\n        var likertMultiStimulusPage = new LikertMultiStimulusPage(pageManager, pageTemplateRenderer, pageConfig, audioContext, config.bufferSize, audioFileLoader, session, errorHandler, config.language);\n        _pageManager.addPage(likertMultiStimulusPage);\n      } else if (pageConfig.type == \"finish\") {\n        var finishPage = new FinishPage(_pageManager, session, dataSender, pageConfig, config.language);\n        _pageManager.addPage(finishPage);\n      } else {\n\n        errorHandler.sendError(\"Type not specified.\");\n\n      }\n    }\n  }\n}\n\nfor (var i = 0; i < $(\"body\").children().length; i++) {\n  if ($(\"body\").children().eq(i).attr('id') != \"popupErrors\" && $(\"body\").children().eq(i).attr('id') != \"popupDialog\") {\n    $(\"body\").children().eq(i).addClass('ui-disabled');\n  }\n}\n\n\n\n\nfunction startup(config) {\n\n\n  if (config == null) {\n    errorHandler.sendError(\"URL couldn't be found!\");\n    callbackURLFound();\n  }\n\n  $.mobile.page.prototype.options.theme = 'a';\n  var interval = setInterval(function() {\n    $.mobile.loading(\"show\", {\n      text : \"Loading...\",\n      textVisible : true,\n      theme : \"a\",\n      html : \"\"\n    });\n    clearInterval(interval);\n  }, 1);\n\n\n  if (pageManager !== null) { // clear everything for new experiment\n    pageTemplateRenderer.clear();\n    $(\"#page_content\").empty();\n    $('#header').empty();\n  }\n\n  localizer = new Localizer();\n  localizer.initializeNLSFragments(nls);\n\n  pageManager = null;\n  audioContext;\n  audioFileLoader = null;\n  mushraValidator = null;\n  dataSender = null;\n  session = null;\n  pageTemplateRenderer = null;\n  interval2 = null;\n\n  document.title = config.testname;\n  $('#header').append(document.createTextNode(config.testname));\n\n  pageManager = new PageManager(\"pageManager\", \"page_content\", localizer);\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n\n  if ( typeof AudioContext !== 'undefined') {\n    audioContext = new AudioContext();\n  } else if ( typeof webkitAudioContext !== 'undefined') {\n    audioContext = new webkitAudioContext();\n  }\n\n  document.addEventListener(\"click\", function () {\n    if (audioContext.state !== 'running') {\n      audioContext.resume();\n    }\n  }, true);\n\n  try {\n    audioContext.destination.channelCountMode = \"explicit\";\n    audioContext.destination.channelInterpretation = \"discrete\";\n    audioContext.destination.channelCount = audioContext.destination.maxChannelCount;\n  } catch (e) {\n    console.log(\"webMUSHRA: Could not set channel count of destination node.\");\n    console.log(e);\n  }\n  audioContext.volume = 1.0;\n\n  audioFileLoader = new AudioFileLoader(audioContext, errorHandler);\n  mushraValidator = new MushraValidator(errorHandler);\n  dataSender = new DataSender(config);\n\n  session = new Session();\n  session.testId = config.testId;\n  session.config = configFile;\n\n  if (config.language == undefined) {\n    config.language = 'en';\n  }\n  pageTemplateRenderer = new PageTemplateRenderer(pageManager, config.showButtonPreviousPage, config.language);\n  pageManager.addCallbackPageEventChanged(pageTemplateRenderer.refresh.bind(pageTemplateRenderer));\n\n  addPagesToPageManager(pageManager, config.pages);\n\n  interval2 = setInterval(function() {\n    clearInterval(interval2);\n    audioFileLoader.startLoading(callbackFilesLoaded);\n  }, 10);\n\n}\n\n// start code (loads config)\n\nfunction getParameterByName(name) {\n  var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);\n  return match && decodeURIComponent(match[1].replace(/\\+/g, ' '));\n}\n\nvar config = null;\nvar configArg = getParameterByName(\"config\");\nvar configFile = '';\nif (configArg) {\n  configFile = 'configs/' + configArg;\n} else {\n  configFile = 'configs/test1.yaml';\n}\n\n\n// global variables\nvar errorHandler = new ErrorHandler();\nvar localizer = null;\nvar pageManager = null;\nvar audioContext = null;\nvar audioFileLoader = null;\nvar mushraValidator = null;\nvar dataSender = null;\nvar session = null;\nvar pageTemplateRenderer = null;\nvar interval2 = null;\n\n\nYAML.load(configFile, (function(result) {\n  config = result;\n  startup(result);\n}));\n\n\n\n// Test dummy di connessione a Firebase\nif (firebase.apps.length === 0) {\n  console.error(\"Modulo Firebase SDK non configurato correttamente!\");\n} else {\n  console.log(\"Connessione a Firebase stabilita correttamente!\");\n}\n\n\n\n//# sourceURL=webpack://webMUSHRA/./public/startup.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./public/startup.js"]();
/******/ 	
/******/ })()
;